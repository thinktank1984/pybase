[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[0;34m🧪 Bloggy Test Runner (Docker)[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m

[0;36m📋 Test Mode: Application Tests Only[0m

[1;33m🔬 Running Application Tests...[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[1;33m🧹 Cleaning screenshots directory...[0m
[0;36mℹ️  No screenshots to clean[0m
[0;36m📝 Command: cd /app && pytest integration_tests/ --cov=runtime --cov-report=html --cov-report=term[0m

time="2025-10-13T11:41:41+13:00" level=warning msg="/Users/ed.sharood2/code/pybase/docker/docker-compose.yaml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
============================= test session starts ==============================
platform linux -- Python 3.12.12, pytest-8.4.2, pluggy-1.6.0
rootdir: /app
plugins: cov-7.0.0, asyncio-1.2.0, anyio-4.11.0
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 74 items

integration_tests/test_auto_ui.py ..............                         [ 18%]
integration_tests/test_oauth_real.py .......................             [ 50%]
integration_tests/test_roles.py .....                                    [ 56%]
integration_tests/test_roles_integration.py ...................          [ 82%]
integration_tests/test_ui_chrome_real.py EEEEEEEEEEEEE                   [100%]

==================================== ERRORS ====================================
______________ ERROR at setup of TestHomepage.test_homepage_loads ______________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
____________ ERROR at setup of TestHomepage.test_navigation_present ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
____________ ERROR at setup of TestHomepage.test_responsive_layouts ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
__________ ERROR at setup of TestAuthentication.test_login_page_loads __________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
________ ERROR at setup of TestAuthentication.test_register_page_loads _________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
________ ERROR at setup of TestAuthentication.test_login_page_has_form _________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
____________ ERROR at setup of TestPerformance.test_console_errors _____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
___________ ERROR at setup of TestPerformance.test_network_requests ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
___________ ERROR at setup of TestPerformance.test_page_performance ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
___ ERROR at setup of TestVisualRegression.test_page_screenshots[homepage-/] ___

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
_ ERROR at setup of TestVisualRegression.test_page_screenshots[login-/auth/login] _

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
_ ERROR at setup of TestVisualRegression.test_page_screenshots[register-/auth/register] _

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
_______ ERROR at setup of TestVisualRegression.test_viewport_screenshots _______

    @pytest.fixture(scope="session")
    def chrome():
        """Get Chrome test helper for the session"""
        if not HAS_CHROME_MCP:
>           pytest.fail(
                "Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. "
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Chrome MCP not available. Set HAS_CHROME_MCP=true to enable. Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:52: Failed
=============================== warnings summary ===============================
integration_tests/test_auto_ui.py:47
  /app/integration_tests/test_auto_ui.py:47: PytestCollectionWarning: cannot collect test class 'TestPost' because it has a __init__ constructor (from: integration_tests/test_auto_ui.py)
    class TestPost(Model):

integration_tests/test_auto_ui.py:63
  /app/integration_tests/test_auto_ui.py:63: PytestCollectionWarning: cannot collect test class 'TestComment' because it has a __init__ constructor (from: integration_tests/test_auto_ui.py)
    class TestComment(Model):

integration_tests/test_oauth_real.py: 17 warnings
integration_tests/test_roles_integration.py: 45 warnings
  /usr/local/lib/python3.12/site-packages/emmett/ctx.py:31: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    return pendulum.instance(datetime.utcnow())

integration_tests/test_roles.py::test_model_imports
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_model_imports returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_decorator_imports
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_decorator_imports returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_seeder_imports
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_seeder_imports returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_user_model_extensions
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_user_model_extensions returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_post_comment_permissions
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_post_comment_permissions returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================================ tests coverage ================================
_______________ coverage: platform linux, python 3.12.12-final-0 _______________

Name                                       Stmts   Miss  Cover
--------------------------------------------------------------
runtime/app.py                               486    336    31%
runtime/auth/__init__.py                       4      0   100%
runtime/auth/linking.py                      106     98     8%
runtime/auth/oauth_manager.py                 35      9    74%
runtime/auth/providers/__init__.py             6      0   100%
runtime/auth/providers/base.py                59     20    66%
runtime/auth/providers/facebook.py            18      8    56%
runtime/auth/providers/github.py              36     25    31%
runtime/auth/providers/google.py              24     10    58%
runtime/auth/providers/microsoft.py           22     10    55%
runtime/auth/rate_limit.py                    40     22    45%
runtime/auth/token_refresh.py                 86     75    13%
runtime/auth/tokens.py                        31      7    77%
runtime/auto_ui_generator.py                 309    174    44%
runtime/base_model.py                        255    255     0%
runtime/chrome_test_helpers.py               110     86    22%
runtime/model_factory.py                     138    138     0%
runtime/model_permissions.py                 109    109     0%
runtime/models/__init__.py                    27      4    85%
runtime/models/comment/__init__.py             2      0   100%
runtime/models/comment/model.py               43     22    49%
runtime/models/decorators.py                 100     90    10%
runtime/models/oauth_account/__init__.py       2      0   100%
runtime/models/oauth_account/model.py         36     13    64%
runtime/models/oauth_token/__init__.py         2      0   100%
runtime/models/oauth_token/model.py           62     39    37%
runtime/models/permission/__init__.py          2      0   100%
runtime/models/permission/api.py               4      4     0%
runtime/models/permission/model.py            84     49    42%
runtime/models/permission/views.py             2      2     0%
runtime/models/post/__init__.py                2      0   100%
runtime/models/post/model.py                  86     52    40%
runtime/models/role/__init__.py                2      0   100%
runtime/models/role/api.py                     4      4     0%
runtime/models/role/model.py                  72     49    32%
runtime/models/role/views.py                   2      2     0%
runtime/models/role_permission.py             51     35    31%
runtime/models/seeder.py                      83     28    66%
runtime/models/user/__init__.py                2      0   100%
runtime/models/user/model.py                 191    161    16%
runtime/models/user_role.py                   59     20    66%
runtime/models/utils.py                      149     58    61%
runtime/openapi_generator.py                  82     65    21%
runtime/validate_models.py                   227    227     0%
--------------------------------------------------------------
TOTAL                                       3252   2306    29%
Coverage HTML written to dir htmlcov
=========================== short test summary info ============================
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_homepage_loads
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_navigation_present
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_responsive_layouts
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_login_page_loads
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_register_page_loads
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_login_page_has_form
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_console_errors
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_network_requests
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_page_performance
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[homepage-/]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[login-/auth/login]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[register-/auth/register]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_viewport_screenshots
================== 61 passed, 69 warnings, 13 errors in 1.35s ==================
[0;31m❌ Application tests failed[0m

[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[0;31m❌ Some tests failed[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
