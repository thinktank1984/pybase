[pytest]
# Pytest configuration for Bloggy application

# Test discovery
testpaths = .
python_files = tests.py test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --tb=short
    -ra
    --color=yes

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Warning filters
filterwarnings =
    # Ignore deprecation warnings from Emmett framework itself
    ignore:datetime.datetime.utcnow.*is deprecated:DeprecationWarning:emmett
    ignore:datetime.datetime.utcnow.*is deprecated:DeprecationWarning:emmett_core
    ignore:There is no current event loop:DeprecationWarning:emmett_core
    # Ignore coverage warnings about HTML template files (harmless)
    ignore:Couldn't parse.*\.html:coverage.exceptions.CoverageWarning
    # Convert our own deprecation warnings to errors (strict for our code)
    error::DeprecationWarning:app
    error::DeprecationWarning:auth
    error::DeprecationWarning:models

# Coverage options (when using --cov)
[coverage:run]
source = .
omit = 
    tests.py
    test_*.py
    */__pycache__/*
    */migrations/*
    venv/*
    .venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

