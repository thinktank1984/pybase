version: "3.8"

services:
  bugsink:
    image: bugsink/bugsink:latest
    container_name: bugsink
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Security / basic setup
      SECRET_KEY: "super_secret_key_change_me"
      CREATE_SUPERUSER: "admin:admin_password"
      PORT: 8000

      # Database (SQLite)
      DATABASE_URL: "sqlite:///data/bugsink.sqlite3"

      # Optional: public URL if behind proxy
      BASE_URL: "http://localhost:8000"
      BEHIND_HTTPS_PROXY: "false"

      # Optional: file-based event storage path
      FILE_EVENT_STORAGE_PATH: "/data/events"
      FILE_EVENT_STORAGE_USE_FOR_WRITE: "True"

    volumes:
      - bugsink_data:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=15d"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    depends_on:
      - alertmanager
      - cadvisor

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  runtime:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: runtime
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - PYTHONUNBUFFERED=1
      - EMMETT_ENV=development
    volumes:
      # Mount the full repository to /app in the container
      - ..:/app
    working_dir: /app
    command: ["granian", "--interface", "asgi", "--host", "0.0.0.0", "--port", "8081", "runtime.app:app"]

volumes:
  bugsink_data:
  prometheus_data:
  alertmanager_data:
  grafana_data:
