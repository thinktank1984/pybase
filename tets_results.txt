[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[0;34m🧪 Bloggy Test Runner[0m
[0;34m🐳 ALL TESTS RUN IN DOCKER[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m

[0;36m📋 Test Mode: ALL (App + Chrome)[0m

[1;33m🔬 Running Application Tests...[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[0;36m🐳 Running in Docker container: runtime[0m

[1;33m🧹 Cleaning screenshots directory...[0m
[0;36mℹ️  No screenshots to clean[0m
[0;36m📝 Docker Command: docker compose exec runtime bash -c "cd /app && pytest integration_tests/ --cov=runtime --cov-report=html --cov-report=term"[0m

============================= test session starts ==============================
platform linux -- Python 3.12.12, pytest-8.4.2, pluggy-1.6.0
rootdir: /app
plugins: playwright-0.7.1, cov-7.0.0, asyncio-1.2.0, base-url-2.1.0, anyio-4.11.0
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 87 items

integration_tests/test_auto_ui.py ..............                         [ 16%]
integration_tests/test_oauth_real.py .......................             [ 42%]
integration_tests/test_oauth_real_user.py .......EEEE..                  [ 57%]
integration_tests/test_roles.py .....                                    [ 63%]
integration_tests/test_roles_integration.py ...................          [ 85%]
integration_tests/test_ui_chrome_real.py EEEEEEEEEEEEE                   [100%]

==================================== ERRORS ====================================
_ ERROR at setup of TestRealUserOAuth.test_store_real_oauth_token_in_database __

    @pytest.fixture()
    def real_oauth_token():
        """
        Load real OAuth token obtained from host machine.
    
        This fixture provides REAL OAuth tokens that were obtained via:
        python3 integration_tests/oauth_token_helper.py --provider google
    
        Returns None if no token is available (test should skip or use alternative).
        """
        if not OAUTH_TOKENS:
>           pytest.fail(
                "No OAuth tokens available. Obtain token from host machine:\n"
                "  python3 integration_tests/oauth_token_helper.py --provider google\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: No OAuth tokens available. Obtain token from host machine:
E             python3 integration_tests/oauth_token_helper.py --provider google
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_oauth_real_user.py:188: Failed
---------------------------- Captured stdout setup -----------------------------
   ℹ️  Using existing user: ed.s.sharood@gmail.com (ID: 24)
_____ ERROR at setup of TestRealUserOAuth.test_use_real_token_for_api_call _____

    @pytest.fixture()
    def real_oauth_token():
        """
        Load real OAuth token obtained from host machine.
    
        This fixture provides REAL OAuth tokens that were obtained via:
        python3 integration_tests/oauth_token_helper.py --provider google
    
        Returns None if no token is available (test should skip or use alternative).
        """
        if not OAUTH_TOKENS:
>           pytest.fail(
                "No OAuth tokens available. Obtain token from host machine:\n"
                "  python3 integration_tests/oauth_token_helper.py --provider google\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: No OAuth tokens available. Obtain token from host machine:
E             python3 integration_tests/oauth_token_helper.py --provider google
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_oauth_real_user.py:188: Failed
______ ERROR at setup of TestRealUserOAuth.test_token_has_required_scopes ______

    @pytest.fixture()
    def real_oauth_token():
        """
        Load real OAuth token obtained from host machine.
    
        This fixture provides REAL OAuth tokens that were obtained via:
        python3 integration_tests/oauth_token_helper.py --provider google
    
        Returns None if no token is available (test should skip or use alternative).
        """
        if not OAUTH_TOKENS:
>           pytest.fail(
                "No OAuth tokens available. Obtain token from host machine:\n"
                "  python3 integration_tests/oauth_token_helper.py --provider google\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: No OAuth tokens available. Obtain token from host machine:
E             python3 integration_tests/oauth_token_helper.py --provider google
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_oauth_real_user.py:188: Failed
___ ERROR at setup of TestRealUserOAuth.test_token_user_info_matches_config ____

    @pytest.fixture()
    def real_oauth_token():
        """
        Load real OAuth token obtained from host machine.
    
        This fixture provides REAL OAuth tokens that were obtained via:
        python3 integration_tests/oauth_token_helper.py --provider google
    
        Returns None if no token is available (test should skip or use alternative).
        """
        if not OAUTH_TOKENS:
>           pytest.fail(
                "No OAuth tokens available. Obtain token from host machine:\n"
                "  python3 integration_tests/oauth_token_helper.py --provider google\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: No OAuth tokens available. Obtain token from host machine:
E             python3 integration_tests/oauth_token_helper.py --provider google
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_oauth_real_user.py:188: Failed
______________ ERROR at setup of TestHomepage.test_homepage_loads ______________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
---------------------------- Captured stdout setup -----------------------------
   🚀 Starting REAL Chrome browser (headless=True)...
____________ ERROR at setup of TestHomepage.test_navigation_present ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
____________ ERROR at setup of TestHomepage.test_responsive_layouts ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
__________ ERROR at setup of TestAuthentication.test_login_page_loads __________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
________ ERROR at setup of TestAuthentication.test_register_page_loads _________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
________ ERROR at setup of TestAuthentication.test_login_page_has_form _________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
____________ ERROR at setup of TestPerformance.test_console_errors _____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
___________ ERROR at setup of TestPerformance.test_network_requests ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
___________ ERROR at setup of TestPerformance.test_page_performance ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
___ ERROR at setup of TestVisualRegression.test_page_screenshots[homepage-/] ___

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
_ ERROR at setup of TestVisualRegression.test_page_screenshots[login-/auth/login] _

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
_ ERROR at setup of TestVisualRegression.test_page_screenshots[register-/auth/register] _

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
_______ ERROR at setup of TestVisualRegression.test_viewport_screenshots _______

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffaabd8920>
cb = <function Channel.send.<locals>.<lambda> at 0xffffaaa228e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
=============================== warnings summary ===============================
integration_tests/test_auto_ui.py:47
  /app/integration_tests/test_auto_ui.py:47: PytestCollectionWarning: cannot collect test class 'TestPost' because it has a __init__ constructor (from: integration_tests/test_auto_ui.py)
    class TestPost(Model):

integration_tests/test_auto_ui.py:63
  /app/integration_tests/test_auto_ui.py:63: PytestCollectionWarning: cannot collect test class 'TestComment' because it has a __init__ constructor (from: integration_tests/test_auto_ui.py)
    class TestComment(Model):

integration_tests/test_oauth_real.py: 17 warnings
integration_tests/test_oauth_real_user.py: 9 warnings
integration_tests/test_roles_integration.py: 45 warnings
  /usr/local/lib/python3.12/site-packages/emmett/ctx.py:31: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    return pendulum.instance(datetime.utcnow())

integration_tests/test_roles.py::test_model_imports
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_model_imports returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_decorator_imports
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_decorator_imports returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_seeder_imports
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_seeder_imports returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_user_model_extensions
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_user_model_extensions returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

integration_tests/test_roles.py::test_post_comment_permissions
  /usr/local/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but integration_tests/test_roles.py::test_post_comment_permissions returned <class 'bool'>.
  Did you mean to use `assert` instead of `return`?
  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================================ tests coverage ================================
_______________ coverage: platform linux, python 3.12.12-final-0 _______________

Name                                       Stmts   Miss  Cover
--------------------------------------------------------------
runtime/app.py                               486    336    31%
runtime/auth/__init__.py                       4      0   100%
runtime/auth/linking.py                      106     98     8%
runtime/auth/oauth_manager.py                 35      9    74%
runtime/auth/providers/__init__.py             6      0   100%
runtime/auth/providers/base.py                59     20    66%
runtime/auth/providers/facebook.py            18      8    56%
runtime/auth/providers/github.py              36     25    31%
runtime/auth/providers/google.py              24     10    58%
runtime/auth/providers/microsoft.py           22     10    55%
runtime/auth/rate_limit.py                    40     22    45%
runtime/auth/token_refresh.py                 86     75    13%
runtime/auth/tokens.py                        31      7    77%
runtime/auto_ui_generator.py                 309    174    44%
runtime/base_model.py                        255    255     0%
runtime/model_factory.py                     138    138     0%
runtime/model_permissions.py                 109    109     0%
runtime/models/__init__.py                    27      4    85%
runtime/models/comment/__init__.py             2      0   100%
runtime/models/comment/model.py               43     22    49%
runtime/models/decorators.py                 100     90    10%
runtime/models/oauth_account/__init__.py       2      0   100%
runtime/models/oauth_account/model.py         36     13    64%
runtime/models/oauth_token/__init__.py         2      0   100%
runtime/models/oauth_token/model.py           62     39    37%
runtime/models/permission/__init__.py          2      0   100%
runtime/models/permission/api.py               4      4     0%
runtime/models/permission/model.py            84     49    42%
runtime/models/permission/views.py             2      2     0%
runtime/models/post/__init__.py                2      0   100%
runtime/models/post/model.py                  86     52    40%
runtime/models/role/__init__.py                2      0   100%
runtime/models/role/api.py                     4      4     0%
runtime/models/role/model.py                  72     49    32%
runtime/models/role/views.py                   2      2     0%
runtime/models/role_permission.py             51     35    31%
runtime/models/seeder.py                      83     28    66%
runtime/models/user/__init__.py                2      0   100%
runtime/models/user/model.py                 191    161    16%
runtime/models/user_role.py                   59     20    66%
runtime/models/utils.py                      149     58    61%
runtime/openapi_generator.py                  82     65    21%
runtime/playwright_helpers.py                197    152    23%
runtime/validate_models.py                   227    227     0%
--------------------------------------------------------------
TOTAL                                       3339   2372    29%
Coverage HTML written to dir htmlcov
=========================== short test summary info ============================
ERROR integration_tests/test_oauth_real_user.py::TestRealUserOAuth::test_store_real_oauth_token_in_database
ERROR integration_tests/test_oauth_real_user.py::TestRealUserOAuth::test_use_real_token_for_api_call
ERROR integration_tests/test_oauth_real_user.py::TestRealUserOAuth::test_token_has_required_scopes
ERROR integration_tests/test_oauth_real_user.py::TestRealUserOAuth::test_token_user_info_matches_config
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_homepage_loads
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_navigation_present
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_responsive_layouts
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_login_page_loads
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_register_page_loads
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_login_page_has_form
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_console_errors
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_network_requests
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_page_performance
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[homepage-/]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[login-/auth/login]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[register-/auth/register]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_viewport_screenshots
================== 70 passed, 78 warnings, 17 errors in 3.07s ==================
[0;31m❌ Application tests failed (ran in Docker)[0m

[1;33m🌐 Running Chrome DevTools Tests...[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[0;36m🐳 Running in Docker container: runtime[0m

[1;33m🧹 Cleaning screenshots directory...[0m
[0;36mℹ️  No screenshots to clean[0m
[0;36m🌐 Running REAL Chrome integration tests via MCP...[0m
[0;36m   This will run in Docker container via MCP Chrome DevTools[0m
[0;36m   Tip: Use --headed flag to run on host with visible browser[0m

[0;36m📡 Checking if app is accessible...[0m
[0;32m✅ App is running[0m

[0;36m🐳 Running in Docker container (headless mode)[0m

[0;36m📝 Docker Command: docker compose exec runtime bash -c "cd /app && pytest integration_tests/test_ui_chrome_real.py -s"[0m

⚠️  Sentry configured but not loaded (template conflict): http://public@bugsink:8000/1
✓ Prometheus metrics enabled at /metrics (pipeline-based)
✓ Prometheus metrics enabled at /metrics (pipeline integration)
✓ Metrics tracked automatically for all requests via pipeline
============================= test session starts ==============================
platform linux -- Python 3.12.12, pytest-8.4.2, pluggy-1.6.0
rootdir: /app
plugins: playwright-0.7.1, cov-7.0.0, asyncio-1.2.0, base-url-2.1.0, anyio-4.11.0
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 13 items

integration_tests/test_ui_chrome_real.py ✅ Patched Role.get_permissions() method
✅ Patched Post.can_edit() and Post.can_delete() methods
   🚀 Starting REAL Chrome browser (headless=True)...
EEEEEEEEEEEEE

==================================== ERRORS ====================================
______________ ERROR at setup of TestHomepage.test_homepage_loads ______________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
____________ ERROR at setup of TestHomepage.test_navigation_present ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
____________ ERROR at setup of TestHomepage.test_responsive_layouts ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
__________ ERROR at setup of TestAuthentication.test_login_page_loads __________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
________ ERROR at setup of TestAuthentication.test_register_page_loads _________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
________ ERROR at setup of TestAuthentication.test_login_page_has_form _________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
____________ ERROR at setup of TestPerformance.test_console_errors _____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
___________ ERROR at setup of TestPerformance.test_network_requests ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
___________ ERROR at setup of TestPerformance.test_page_performance ____________

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
___ ERROR at setup of TestVisualRegression.test_page_screenshots[homepage-/] ___

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
_ ERROR at setup of TestVisualRegression.test_page_screenshots[login-/auth/login] _

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
_ ERROR at setup of TestVisualRegression.test_page_screenshots[register-/auth/register] _

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
_______ ERROR at setup of TestVisualRegression.test_viewport_screenshots _______

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
>           helper = get_chrome_helper()
                     ^^^^^^^^^^^^^^^^^^^

integration_tests/test_ui_chrome_real.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
runtime/playwright_helpers.py:463: in get_chrome_helper
    helper.start()
runtime/playwright_helpers.py:55: in start
    self.browser = self.playwright.chromium.launch(
/usr/local/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0xffffb0f89040>
cb = <function Channel.send.<locals>.<lambda> at 0xffffb0fbcae0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/usr/local/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error

During handling of the above exception, another exception occurred:

    @pytest.fixture(scope="session")
    def chrome():
        """Get REAL Chrome test helper (Playwright) for the session"""
        try:
            helper = get_chrome_helper()
            print(f"\n🌐 REAL Chrome browser started for {helper.base_url}")
            yield helper
            helper.close()
            print("\n✨ REAL Chrome tests complete")
        except Exception as e:
>           pytest.fail(
                f"Playwright Chrome not available: {e}\n"
                "Tests cannot be skipped - they must either run or fail."
            )
E           Failed: Playwright Chrome not available: BrowserType.launch: Executable doesn't exist at /root/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝
E           Tests cannot be skipped - they must either run or fail.

integration_tests/test_ui_chrome_real.py:61: Failed
=========================== short test summary info ============================
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_homepage_loads
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_navigation_present
ERROR integration_tests/test_ui_chrome_real.py::TestHomepage::test_responsive_layouts
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_login_page_loads
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_register_page_loads
ERROR integration_tests/test_ui_chrome_real.py::TestAuthentication::test_login_page_has_form
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_console_errors
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_network_requests
ERROR integration_tests/test_ui_chrome_real.py::TestPerformance::test_page_performance
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[homepage-/]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[login-/auth/login]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_page_screenshots[register-/auth/register]
ERROR integration_tests/test_ui_chrome_real.py::TestVisualRegression::test_viewport_screenshots
============================== 13 errors in 1.21s ==============================

[0;31m❌ Chrome tests failed (ran in Docker)[0m

[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[0;31m❌ Some tests failed[0m
[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
